<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <jmxConfigurator/>

    <!--<appender name="LOGSTASH" class="com.cwbase.logback.RedisAppender">-->
    <!--<host>localhost</host>-->
    <!--<port>32774</port>-->
    <!--<key>my-spring-boot-auth</key>-->

    <!--</appender>-->
    <!-- 读取spring.application.name中的属性来生成日志文件名 -->
    <springProperty scope="context" name="logAppName" source="spring.application.name" defaultValue="localhost.log"/>
    <!-- 勿用${LOG_FILE}相对路径 生成目录 -->
    <property name="LOG_HOME" value="/opt/logs/"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>
    </appender>
    <appender name="TIME_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">

        <encoder>
            <pattern>%d{HH:mm:ss.SSS}[%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxHistory>365</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--错误日志统一输出到这里-->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${logAppName}/error/error.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <MaxHistory>30</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS}[%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="TIME_FILE"/>
    </appender>

    <springProfile name="default">
        <logger name="com.haoxiaec.wechat" level="DEBUG"/>
    </springProfile>
    <springProfile name="dev">
        <logger name="com.haoxiaec.wechat" level="DEBUG"/>
    </springProfile>
    <springProfile name="pre">
        <logger name="com.haoxiaec.wechat" level="DEBUG"/>
    </springProfile>
    <springProfile name="prod">
        <logger name="com.haoxiaec.wechat" level="INFO"/>
    </springProfile>

    <!--不同业务逻辑的日志打印到不同文件-->
    <appender name="ByDiylog1Appender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--定义局部的文件保存位置,能覆盖全局设置的位置-->
        <!--   <File>${LOG_HOME}/program/ByDiylog1.log</File>-->
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/program/ByDiylog1.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--只保留60天历史记录-->
            <maxHistory>60</maxHistory>
            <!--超过20m，自动以 下标 i 进行分割-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>20MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder charset="UTF-8">
            <!--  为大数据分析去除无用打印 -->
         <!--
         &#45;&#45;格式化输出：
         %d表示日期，
         %thread表示线程名，
         %-5level： 级别从左显示5个字符宽度
         %msg：日志消息，
         %n是换行符&ndash;&gt;
         -->
            <pattern>%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>


    <!-- 不同的业务逻辑日志打印到指定文件夹-->
    <logger name="ByDiylog1" additivity="false" level="INFO">
        <appender-ref ref="ByDiylog1Appender"/>
    </logger>




    <root level="INFO">
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="TIME_FILE"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE_ERROR" />
    </root>
</configuration>
